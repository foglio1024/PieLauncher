<Window x:Class="PieLauncher.ConfigWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:nsEx="clr-namespace:Nostrum.WPF.Extensions;assembly=Nostrum.WPF"
        xmlns:local="clr-namespace:PieLauncher"
        xmlns:controls="clr-namespace:PieLauncher.Controls"
        xmlns:dd="urn:gong-wpf-dragdrop"
        mc:Ignorable="d" 
        ResizeMode="CanMinimize"
        WindowStartupLocation="CenterScreen"
        FontFamily="{StaticResource K2DRegular}"
        d:DataContext="{d:DesignInstance Type=local:MainViewModel}"
        Title="Pie launcher settings" 
        Height="800" Width="1000">
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource DefaultTextBrush}"/>
        </Style>
    </Window.Style>
    <WindowChrome.WindowChrome>
        <WindowChrome ResizeBorderThickness="2 2 4 4"
                      GlassFrameThickness="0 0 1 1"
                       CaptionHeight="0"/>
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <Style TargetType="Border" x:Key="FieldBorderStyle">
            <Setter Property="Background" Value="{StaticResource DefaultBorderBrush}"/>
            <Setter Property="Grid.ColumnSpan" Value="4"/>
            <Setter Property="Margin" Value="-16 5 0 0"/>
            <Setter Property="CornerRadius" Value="16"/>
            <Setter Property="Height" Value="32"/>
        </Style>

        <Style x:Key="OptionLabelStyle" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Grid.Column" Value="1"/>
        </Style>
        <Style x:Key="OptionButtonStyle" TargetType="Button" BasedOn="{StaticResource NostrumMainButtonStyle}">
            <Setter Property="Padding" Value="10 8"/>
            <Setter Property="Margin" Value="1"/>
            <Setter Property="nsEx:ButtonExtensions.CornerRadius" Value="5"/>
        </Style>
        <Style x:Key="OptionPathStyle" TargetType="Path" BasedOn="{StaticResource {x:Type Path}}">
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="14"/>
            <Setter Property="Margin" Value="0 0 8 0"/>
        </Style>
        <Style x:Key="ButtonsStyle" BasedOn="{StaticResource NostrumMainButtonStyle}" TargetType="Button">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Background" Value="#1fff"/>
            <Setter Property="nsEx:ButtonExtensions.CornerRadius" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <DataTemplate x:Key="FolderActionsDataTemplate" DataType="{x:Type local:FolderViewModel}">
            <Button Style="{StaticResource ButtonsStyle}" 
                    Foreground="{StaticResource DefaultTextBrush}"
                    Width="Auto" Padding="10 6" Cursor="Arrow"
                    HorizontalAlignment="Center">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Add new item" Margin="0 0 8 0" VerticalAlignment="Center" Grid.Column="1" IsHitTestVisible="False"/>
                    <Path Data="{StaticResource SvgAddRounded}" Grid.Column="0" IsHitTestVisible="False"
                                      Fill="{StaticResource DefaultTextBrush}" Width="12" Height="12" VerticalAlignment="Center"/>
                    <Path Data="{StaticResource SvgArrowDown}" Grid.Column="2" IsHitTestVisible="False"
                                      Fill="{StaticResource DefaultTextBrush}" Width="8" Height="8" VerticalAlignment="Center" Opacity=".8"/>
                    <Popup x:Name="AddOptionsPopup" Placement="Center" AllowsTransparency="True" PopupAnimation="Fade"
                           VerticalOffset="35" HorizontalOffset="0">
                        <Grid Margin="50">
                            <Border Background="{StaticResource BackgroundBrush}" CornerRadius="5" 
                                    BorderBrush="{DynamicResource DefaultBorderBrush}" BorderThickness="1">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0" BlurRadius="20" Opacity=".5"/>
                                </Border.Effect>
                            </Border>

                            <StackPanel>
                                <Button Command="{Binding AddShortcutCommand}" 
                                                    Style="{StaticResource OptionButtonStyle}" 
                                                    nsEx:ButtonExtensions.CornerRadius="5 5 0 0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Path Data="{StaticResource SvgLink}" Style="{StaticResource OptionPathStyle}"/>
                                        <TextBlock Text="Add new shortcut"  Style="{StaticResource OptionLabelStyle}"/>
                                    </Grid>
                                </Button>
                                <Button Command="{Binding AddFolderCommand}" 
                                                    Style="{StaticResource OptionButtonStyle}" 
                                                    nsEx:ButtonExtensions.CornerRadius="0 0 0 0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Path Data="{StaticResource SvgMoreHorizontal}" Style="{StaticResource OptionPathStyle}"/>
                                        <TextBlock Text="Add new group"  Style="{StaticResource OptionLabelStyle}"/>
                                    </Grid>
                                </Button>
                                <Button Command="{Binding AddSeparatorCommand}" 
                                                    Style="{StaticResource OptionButtonStyle}" 
                                                    nsEx:ButtonExtensions.CornerRadius="0 0 5 5">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Path Data="{StaticResource SvgHorizontalRule}" Style="{StaticResource OptionPathStyle}"/>
                                        <TextBlock Text="Add new separator"  Style="{StaticResource OptionLabelStyle}"/>
                                    </Grid>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Popup>
                </Grid>
            </Button>
            <DataTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="AddOptionsPopup" Property="IsOpen" Value="True"/>
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="MinWidth" Value="10"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource DefaultTextBrush}"/>
            <Setter Property="Margin" Value="0 2"/>
            <Setter Property="BorderThickness" Value="0 0 0 1"/>
            <Setter Property="BorderBrush" Value="#1fff"/>
            <Setter Property="CaretBrush" Value="White"/>
        </Style>

        <Style x:Key="FieldIconPathStyle" TargetType="{x:Type Path}" BasedOn="{StaticResource {x:Type Path}}">
            <Setter Property="Grid.Column" Value="0"/>
            <Setter Property="Margin" Value="0 0 6 0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="12"/>
            <Setter Property="Height" Value="12"/>
        </Style>
        <Style x:Key="FieldLabelStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{StaticResource DimTextBrush}"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0 0 6 0"/>
            <Setter Property="Grid.Column" Value="0"/>
        </Style>
        <Style x:Key="BrowseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource NostrumContentOpacityButtonStyle}">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Grid.Column" Value="4"/>
            <Setter Property="Margin" Value="4 0 0 0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="nsEx:ButtonExtensions.CornerRadius" Value="2"/>
        </Style>
        <DataTemplate x:Key="ItemExpanderHeaderTemplate" DataType="{x:Type local:PieItemBase}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <!--Visibility="{Binding ElementName=Icon, Path=Source, Converter={conv:NullToVisibilityConverter Invert=True}}"-->


                <Path Data="{StaticResource SvgBlurOn}" Width="30" Height="30" 
                      >
                    <Shape.Fill>
                        <RadialGradientBrush>
                            <!--TODO-->
                            <GradientStop Color="#2fff" Offset="0"></GradientStop>
                            <GradientStop Color="#1fff" Offset="1"></GradientStop>
                        </RadialGradientBrush>
                    </Shape.Fill>
                </Path>
                <Image Source="{Binding ImageSource}" Grid.RowSpan="3" 
                                   Visibility="Visible"
                                   RenderOptions.BitmapScalingMode="HighQuality" 
                                   x:Name="Icon"
                                   Margin="5"
                                   Height="30"
                                   HorizontalAlignment="Left"
                                   Grid.Column="0"/>
                <TextBox Grid.Column="1" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       Margin="8 0 0 0"
                                       VerticalAlignment="Center"
                                       FontSize="18"/>
            </Grid>

        </DataTemplate>

        <DataTemplate x:Key="PieItemDataTemplate" DataType="{x:Type local:PieItemBase}">
            <Grid Background="Transparent" Margin="5">
                <Border Background="#19777990" Grid.ColumnSpan="2"
                        BorderBrush="#444" BorderThickness="1"
                        CornerRadius="5"/>

                <ContentControl Content="{Binding}"
                                Margin="6"
                                ContentTemplateSelector="{DynamicResource TemplateSelector}"
                                VerticalAlignment="Stretch" VerticalContentAlignment="Stretch"/>
                <Button Style="{StaticResource NostrumMainButtonStyle}"
                        Padding="4" Margin="0 -7 -7 0" 
                        Command="{Binding DeleteCommand}" 
                        VerticalAlignment="Top"
                        HorizontalAlignment="Right"
                        nsEx:ButtonExtensions.RippleEnabled="False"
                        VerticalContentAlignment="Center" 
                        x:Name="DeleteButton" Visibility="Collapsed"
                        Background="#202325" 
                        BorderBrush="#444"
                        BorderThickness="1"
                        nsEx:ButtonExtensions.CornerRadius="20"
                        ToolTip="Delete this item">
                    <Path Data="{StaticResource SvgCloseRounded}" 
                          Fill="#f55" Stroke="#f55"
                          Margin="2" Width="8" Height="8" />
                </Button>
                <!--<Grid.ContextMenu>
                    <ContextMenu UseLayoutRounding="True" Foreground="White">
                        <MenuItem Header="Copy" Command="{Binding CopyCommand}"/>
                        <MenuItem Header="Cut" Command="{Binding CutCommand}"/>
                        <MenuItem Header="Paste" Command="{Binding PasteCommand}"/>
                        <MenuItem Header="Move to root" Command="{Binding MoveToRootCommand}"/>
                    </ContextMenu>
                </Grid.ContextMenu>-->
            </Grid>
            <DataTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="DeleteButton" Property="Visibility" Value="Visible"/>
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="ShortcutDataTemplate" DataType="{x:Type local:ShortcutViewModel}">
            <Expander Header="{Binding}" HeaderTemplate="{StaticResource ItemExpanderHeaderTemplate}">
                <Grid Margin="20 2 2 0">
                    <Grid.Resources>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions >
                        <ColumnDefinition Width="0"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="0" x:Name="RunAsAdminRow"/>
                    </Grid.RowDefinitions>
                    <Border Style="{StaticResource FieldBorderStyle}" Margin="-16 0 0 0"/>
                    <Border Style="{StaticResource FieldBorderStyle}"
                            Grid.Row="1" />
                    <Border Style="{StaticResource FieldBorderStyle}" 
                            Grid.Row="2" />
                    <Border Style="{StaticResource FieldBorderStyle}"
                            Grid.Row="3" />
                    <Border Style="{StaticResource FieldBorderStyle}"
                            Grid.Row="4" />

                    <TextBlock Style="{StaticResource FieldLabelStyle}" Grid.Column="1" Text="Path" />
                    <TextBlock Style="{StaticResource FieldLabelStyle}" Grid.Column="1" Text="Icon path" Grid.Row="1"/>
                    <TextBlock Style="{StaticResource FieldLabelStyle}" Grid.Column="1" Text="Arguments" Grid.Row="2"/>
                    <TextBlock Style="{StaticResource FieldLabelStyle}" Grid.Column="1" Text="Working dir" Grid.Row="3"/>
                    <TextBlock Style="{StaticResource FieldLabelStyle}" Grid.Column="1" Text="Can run as admin" Grid.Row="4"/>

                    <TextBox Text="{Binding Uri, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" HorizontalAlignment="Stretch"/>
                    <TextBox Text="{Binding IconPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Stretch"/>
                    <TextBox Text="{Binding Args, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" Margin="0 0 0 0" Grid.Row="2" HorizontalAlignment="Stretch"/>
                    <TextBox Text="{Binding WorkingDir, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" Grid.Row="3" HorizontalAlignment="Stretch"/>
                    <CheckBox IsChecked="{Binding CanRunAsAdmin, Mode=TwoWay}" Grid.Column="2" Grid.Row="4" HorizontalAlignment="Left" VerticalAlignment="Center" />

                    <Button Style="{StaticResource BrowseButtonStyle}" Grid.Row="0" x:Name="BrowseButton"
                            Height="20" Margin="0 0 10 0" Background="Transparent">
                        <Grid>
                            <StackPanel Orientation="Horizontal" >
                                <Path Data="{StaticResource SvgSearch}" Margin="4" />
                                <Path Data="{StaticResource SvgArrowDown}" Margin="0 8 4 8" Opacity=".5"/>
                            </StackPanel>
                            <Popup x:Name="BrowseOptionsPopup" Placement="Bottom" VerticalOffset="-20" HorizontalOffset="-50" AllowsTransparency="True" PopupAnimation="Fade">
                                <Grid Margin="50">
                                    <Border Background="#202325" CornerRadius="5" BorderBrush="#444" BorderThickness="1">
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="0" BlurRadius="20" Opacity=".5"/>
                                        </Border.Effect>
                                    </Border>
                                    <StackPanel Margin="0">
                                        <Button Command="{Binding BrowseFileCommand}" 
                                            Style="{StaticResource OptionButtonStyle}" 
                                            nsEx:ButtonExtensions.CornerRadius="5 5 0 0">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Path Data="{StaticResource SvgFileRounded}" Style="{StaticResource OptionPathStyle}"/>
                                                <TextBlock Text="Browse file"  Style="{StaticResource OptionLabelStyle}"/>
                                            </Grid>
                                        </Button>
                                        <Button Command="{Binding BrowseFolderCommand}" Style="{StaticResource OptionButtonStyle}"
                                            nsEx:ButtonExtensions.CornerRadius="0 0 5 5">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Path Data="{StaticResource SvgFolderRounded}" Style="{StaticResource OptionPathStyle}"/>
                                                <TextBlock Text="Browse folder" Style="{StaticResource OptionLabelStyle}"/>
                                            </Grid>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Button>
                    <Button  Style="{StaticResource BrowseButtonStyle}" Grid.Row="1" Command="{Binding BrowseIconCommand}" Height="20"
                             HorizontalAlignment="Center" Background="Transparent" Margin="0 0 10 0" VerticalAlignment="Center">
                        <Path Data="{StaticResource SvgSearchImage}" Margin="4"/>
                    </Button>
                    <Button  Style="{StaticResource BrowseButtonStyle}" Grid.Row="3" Command="{Binding BrowseWorkingDirCommand}" Height="20"
                             HorizontalAlignment="Center" Background="Transparent" Margin="0 0 10 0" VerticalAlignment="Center">
                        <Path Data="{StaticResource SvgSearch}" Margin="4"/>
                    </Button>
                </Grid>
            </Expander>
            <DataTemplate.Triggers>
                <Trigger SourceName="BrowseButton" Property="IsMouseOver" Value="True">
                    <Setter TargetName="BrowseOptionsPopup" Property="IsOpen" Value="True"/>
                </Trigger>
                <DataTrigger Binding="{Binding IsAssembly}" Value="True">
                    <Setter TargetName="RunAsAdminRow" Property="Height" Value="Auto"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsVbScript}" Value="True">
                    <Setter TargetName="RunAsAdminRow" Property="Height" Value="Auto"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="SeparatorDataTemplate" DataType="{x:Type local:SeparatorViewModel}">
            <Grid HorizontalAlignment="Left" Margin="11 0 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Separator" Foreground="{StaticResource DimTextBrush}"  Grid.Column="1" Margin="15 0" VerticalAlignment="Center"/>
                <Ellipse Grid.Column="0" Fill="#5999" Width="6" Height="6"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="GroupDataTemplate" DataType="{x:Type local:FolderViewModel}">
            <Expander Header="{Binding}" HeaderTemplate="{StaticResource ItemExpanderHeaderTemplate}">
                <Grid Margin="0 2 2 0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid Margin="20 2 4 0">
                        <Grid.ColumnDefinitions >
                            <ColumnDefinition Width="0"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Margin="-16 0 0 0" Style="{StaticResource FieldBorderStyle}"/>

                        <TextBlock Style="{StaticResource FieldLabelStyle}" Grid.Column="1" Text="Icon path" />
                        <TextBox Text="{Binding IconPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 Grid.Column="2" 
                                 HorizontalAlignment="Stretch"/>
                        <Button  Style="{StaticResource BrowseButtonStyle}" Grid.Row="2" 
                                 Command="{Binding BrowseIconCommand}" Height="20" Margin="0 0 10 0">
                            <Path Data="{StaticResource SvgSearchImage}" Margin="4"/>
                        </Button>


                    </Grid>
                    <ItemsControl ItemsSource="{Binding Apps}" 
                                  ItemTemplate="{StaticResource PieItemDataTemplate}"
                                  dd:DragDrop.IsDragSource="True"
                                  dd:DragDrop.IsDropTarget="True"
                                  dd:DragDrop.DropTargetAdornerBrush="DarkOrange"
                                  MinHeight="20"
                                  Background="Transparent"
                                  Grid.Row="1"
                                  Margin="0 10 0 0"
                                               />
                    <ContentControl Content="{Binding}"
                                        Grid.Row="2" HorizontalAlignment="Right" 
                                        ContentTemplate="{StaticResource FolderActionsDataTemplate}"/>

                </Grid>

            </Expander>

        </DataTemplate>

        <local:PieItemTemplateSelector x:Key="TemplateSelector"
                                       ShortcutDataTemplate="{StaticResource ShortcutDataTemplate}"
                                       SeparatorDataTemplate="{StaticResource SeparatorDataTemplate}"
                                       GroupDataTemplate="{StaticResource GroupDataTemplate}"/>
        <Style x:Key="SectionHeaderStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="32"/>
            <Setter Property="FontWeight" Value="Thin"/>
            <Setter Property="Margin" Value="20 0"/>
            <Setter Property="Foreground" Value="{StaticResource DimTextBrush}"/>
        </Style>
        <Style x:Key="TitleBarButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource NostrumMainButtonStyle}">
            <Setter Property="Background" Value="{StaticResource OverlayBrush}"/>
            <Setter Property="nsEx:ButtonExtensions.CornerRadius" Value="10"/>
            <Setter Property="nsEx:ButtonExtensions.RippleEnabled" Value="False"/>
            <Setter Property="Height" Value="18"/>
            <Setter Property="Width" Value="18"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="TitleBarButtonPathStyle" TargetType="{x:Type Path}">
            <Setter Property="Height" Value="8"/>
            <Setter Property="Width" Value="8"/>
            <Setter Property="Fill" Value="{StaticResource DefaultTextBrush}"/>
            <Setter Property="Stretch" Value="Uniform"/>

        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.3*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <!--Title bar-->
            <RowDefinition Height="Auto"/>
            <!--Settings-->
            <RowDefinition Height="Auto"/>
            <!--Separator-->
            <RowDefinition Height="Auto"/>
            <!--Items-->
            <RowDefinition/>
            <!--Add button-->
            <RowDefinition Height="Auto"/>
            <!--Separator-->
            <RowDefinition Height="Auto"/>
            <!--Buttons-->
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Border Background="{StaticResource OverlayBrush}" Grid.ColumnSpan="3"
                MouseLeftButtonDown="TextBlock_MouseLeftButtonDown"
                />
        <!--Title bar-->
        <TextBlock Text="Pie launcher settings" 
                   HorizontalAlignment="Stretch"
                   Grid.ColumnSpan="2"
                   Background="Transparent"
                   FontWeight="Thin" FontSize="20"  
                   Padding="48 10 0 10"
                   IsHitTestVisible="False"
                   VerticalAlignment="Center"/>
        <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center"
                    Margin="10 0" Orientation="Horizontal"
                    Background="Transparent" Grid.ColumnSpan="2">
            <Button Style="{StaticResource TitleBarButtonStyle}" 
                    Click="OnMinimizeButtonClick"
                    Margin="0 0 4 0" >
                <Path Style="{StaticResource TitleBarButtonPathStyle}" 
                      Data="{StaticResource SvgMinimize}" />
            </Button>
            <Button Style="{StaticResource TitleBarButtonStyle}" 
                    Click="OnCloseButtonClick" >
                <Path Style="{StaticResource TitleBarButtonPathStyle}"
                      Data="{StaticResource SvgCloseRounded}" />
            </Button>
        </StackPanel>
        <Image Source="/icon.ico" Width="24" Height="24"
               HorizontalAlignment="Left" Margin="13 2 16 0"
               VerticalAlignment="Center"
               IsHitTestVisible="False"
               />

        <TextBlock Grid.Row="1" Text="Settings" Style="{StaticResource SectionHeaderStyle}"
                   Margin="20 10 20 0"/>
        <TextBlock Grid.Row="3" Text="Items" Style="{StaticResource SectionHeaderStyle}"/>

        <!--Hotkey and startup-->
        <StackPanel Grid.Row="1" Margin="16 10 0 0" 
                     Grid.Column="1" 
                     HorizontalAlignment="Stretch"
                     VerticalAlignment="Center" Height="Auto" >
            <StackPanel.Resources>
                <Style x:Key="SettingBorderStyle" TargetType="Border">
                    <Setter Property="Height" Value="32"/>
                    <Setter Property="Background" Value="#2000"/>
                    <Setter Property="Grid.ColumnSpan" Value="2"/>
                    <Setter Property="CornerRadius" Value="16"/>
                    <Setter Property="Margin" Value="-16 0 0 0"/>
                </Style>
                <ControlTemplate x:Key="SettingTemplate" TargetType="ContentControl">
                    <Grid Grid.Row="1" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Style="{StaticResource SettingBorderStyle}"/>
                        <TextBlock Style="{StaticResource FieldLabelStyle}" 
                                   Text="{TemplateBinding local:ContentControlExtensions.Label}" />
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          Grid.Column="1"
                                          Height="30" Margin="5 0 15 0"
                                          VerticalAlignment="Center" />
                    </Grid>

                </ControlTemplate>
                <Style TargetType="ContentControl">
                    <Setter Property="Template"  Value="{StaticResource SettingTemplate}"/>
                    <Setter Property="Margin" Value="0 5 0 0"/>
                </Style>

            </StackPanel.Resources>
            <ContentControl local:ContentControlExtensions.Label="Start with windows"
                            Margin="0">
                <CheckBox IsChecked="{Binding StartWithWindows, Mode=TwoWay}"
                      Foreground="{StaticResource DefaultTextBrush}" 
                      nsEx:CheckBoxExtensions.Size="14"
                      VerticalAlignment="Center" />
            </ContentControl>
            <ContentControl local:ContentControlExtensions.Label="Hotkey">
                <controls:HotkeySettingControl Value="{Binding HotKey, Mode=TwoWay}" 
                                               Grid.Column="1" />
            </ContentControl>
            <ContentControl local:ContentControlExtensions.Label="Trigger mode">
                <ComboBox SelectedValue="{Binding TriggerMode, Mode=TwoWay}"
                          Style="{StaticResource ComboBoxMainStyle}"
                          Foreground="{StaticResource DefaultTextBrush}"
                          VerticalContentAlignment="Center"
                          ItemsSource="{nsEx:EnumBindingSource {x:Type local:TriggerMode}}"
                          nsEx:ComboBoxExtensions.DropDownBorderStyle="{StaticResource ComboBoxDropDownBorderStyle}"/>
            </ContentControl>

            <ContentControl local:ContentControlExtensions.Label="Close after launch" >
                <ContentControl.Style>
                    <Style BasedOn="{StaticResource {x:Type ContentControl}}" TargetType="{x:Type ContentControl}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TriggerMode}" Value="{x:Static local:TriggerMode.Toggle}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
                <CheckBox IsChecked="{Binding CloseAfterClick, Mode=TwoWay}"
                      Foreground="{StaticResource DefaultTextBrush}" 
                      nsEx:CheckBoxExtensions.Size="14"
                      VerticalAlignment="Center" />
            </ContentControl>

            <ContentControl local:ContentControlExtensions.Label="Theme">
                <ComboBox SelectedValue="{Binding Theme, Mode=TwoWay}"
                          Style="{StaticResource ComboBoxMainStyle}"
                          Foreground="{StaticResource DefaultTextBrush}"
                          VerticalContentAlignment="Center"
                          ItemsSource="{nsEx:EnumBindingSource {x:Type local:Theme}}"
                          nsEx:ComboBoxExtensions.DropDownBorderStyle="{StaticResource ComboBoxDropDownBorderStyle}"
                          />
            </ContentControl>
        </StackPanel>

        <Separator Grid.Row="2" Grid.ColumnSpan="2"
                   Margin="20 10 20 10" Background="#2fff"/>

        <!--Items-->
        <ScrollViewer Grid.Column="1"
                      Grid.Row="3"
                      Margin="0 0 10 0">
            <ItemsControl x:Name="RootFolder" 
                          Grid.Column="1"
                          Margin="0 2 6 0"
                          ItemsSource="{Binding Root.Apps}" 
                          ItemTemplate="{StaticResource PieItemDataTemplate}"
                          dd:DragDrop.IsDragSource="True"
                          dd:DragDrop.IsDropTarget="True"
                          dd:DragDrop.DropTargetAdornerBrush="Orange"
                      />
        </ScrollViewer>

        <!--Add button-->
        <ContentControl Grid.Row="4" Grid.Column="1"
                        HorizontalAlignment="Left" Margin="0 4 0 0" 
                        Content="{Binding Root}" 
                        ContentTemplate="{StaticResource FolderActionsDataTemplate}"/>

        <Separator Grid.Row="5" Grid.ColumnSpan="2" Margin="20 8 20 10" Background="#2fff"/>

        <!--Config management buttons-->
        <UniformGrid Grid.Row="6" Rows="1" Grid.Column="1"
                     HorizontalAlignment="Right" Margin="0 0 10 10">
            <Button Style="{StaticResource ButtonsStyle}" 
                    Command="{Binding ImportConfigCommand}" 
                    Width="Auto" Padding="10 6">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Path Data="{StaticResource SvgImport}" Style="{StaticResource OptionPathStyle}"/>
                    <TextBlock Text="Import items" Style="{StaticResource OptionLabelStyle}"></TextBlock>
                </Grid>
            </Button>
            <Button Style="{StaticResource ButtonsStyle}" 
                    Command="{Binding SaveConfigCommand}"
                    Width="Auto" Padding="10 6" Background="SeaGreen">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Path Data="{StaticResource SvgSave}" Style="{StaticResource OptionPathStyle}"/>
                    <TextBlock Text="Save and close" Style="{StaticResource OptionLabelStyle}"></TextBlock>
                </Grid>
            </Button>
            <!--<Button Style="{StaticResource ButtonsStyle}" Command="{Binding ExportConfigCommand}"
                    Width="Auto" Padding="10 6">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Path Data="{StaticResource SvgExport}" Style="{StaticResource OptionPathStyle}"/>
                    <TextBlock Text="Export settings" Style="{StaticResource OptionLabelStyle}"/>
                </Grid>
            </Button>-->
        </UniformGrid>


    </Grid>

</Window>
