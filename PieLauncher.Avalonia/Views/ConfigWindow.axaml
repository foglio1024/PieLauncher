<Window
    x:Class="PieLauncher.Avalonia.Views.ConfigWindow"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonia="using:PieLauncher.Avalonia"
    xmlns:controls="using:PieLauncher.Avalonia.Controls"
    xmlns:core="using:PieLauncher.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:icons="using:Material.Icons.Avalonia"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="using:PieLauncher.Core.ViewModels"
    xmlns:views="clr-namespace:PieLauncher.Avalonia.Views"
    Title="PieLauncher"
    d:DesignHeight="450"
    d:DesignWidth="800"
    x:DataType="viewModels:MainViewModel"
    Background="Transparent"
    ExtendClientAreaToDecorationsHint="True"
    TransparencyLevelHint="AcrylicBlur"
    mc:Ignorable="d">
    <Window.Styles>
        <Style Selector="Path.flipped">
            <Setter Property="RenderTransform" Value="rotate(180deg)" />
        </Style>

        <Style Selector="TreeView.NodesDragAndDrop">
            <Style.Resources>
                <views:NodesTreeViewDropHandler x:Key="NodesTreeViewDropHandler" />
            </Style.Resources>
            <Setter Property="(Interaction.Behaviors)">
                <BehaviorCollectionTemplate>
                    <BehaviorCollection>
                        <ContextDropBehavior Handler="{StaticResource NodesTreeViewDropHandler}" />
                    </BehaviorCollection>
                </BehaviorCollectionTemplate>
            </Setter>
        </Style>

        <Style Selector="TreeView.NodesDragAndDrop TreeViewItem">
            <Setter Property="(Interaction.Behaviors)">
                <BehaviorCollectionTemplate>
                    <BehaviorCollection>
                        <ContextDragBehavior HorizontalDragThreshold="10" VerticalDragThreshold="10" />
                    </BehaviorCollection>
                </BehaviorCollectionTemplate>
            </Setter>
        </Style>
    </Window.Styles>
    <Window.Resources>
        <!--  ReSharper disable once Xaml.RedundantResource  -->
        <ControlTheme x:Key="{x:Type TreeViewItem}" TargetType="TreeViewItem">
            <Setter Property="Padding" Value="4" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="IsExpanded" Value="True" />
            <Setter Property="CornerRadius" Value="4" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Template">
                <ControlTemplate>
                    <StackPanel>
                        <Border
                            Name="PART_LayoutRoot"
                            MinHeight="{TemplateBinding MinHeight}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Focusable="True"
                            TemplatedControl.IsTemplateFocusTarget="True">
                            <Grid
                                Name="PART_Header"
                                Margin="{TemplateBinding Level,
                                                         Mode=OneWay,
                                                         Converter={StaticResource TreeViewItemLeftMarginConverter}}"
                                ColumnDefinitions="Auto, *">
                                <Panel Name="PART_ExpandCollapseChevronContainer">
                                    <ToggleButton
                                        Name="PART_ExpandCollapseChevron"
                                        Margin="8 0 8 0"
                                        Focusable="False"
                                        Foreground="#555"
                                        IsChecked="{TemplateBinding IsExpanded,
                                                                    Mode=TwoWay}"
                                        Theme="{StaticResource FluentTreeViewExpandCollapseChevron}" />
                                </Panel>
                                <Border
                                    x:Name="ContentBorder"
                                    Grid.Column="1"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="{TemplateBinding CornerRadius}">
                                    <ContentPresenter
                                        Name="PART_HeaderPresenter"
                                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                        Background="Transparent"
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        Focusable="False" />
                                </Border>
                            </Grid>
                        </Border>
                        <ItemsPresenter
                            Name="PART_ItemsPresenter"
                            IsVisible="{TemplateBinding IsExpanded}"
                            ItemsPanel="{TemplateBinding ItemsPanel}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter>

            <!--  PointerOver state  -->
            <Style Selector="^ /template/ Border#ContentBorder:pointerover">
                <Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundPointerOver}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushPointerOver}" />
            </Style>
            <Style Selector="^ /template/ Border#PART_LayoutRoot:pointerover > ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundPointerOver}" />
            </Style>

            <!--  Pressed state  -->
            <Style Selector="^:pressed /template/ Border#ContentBorder:pointerover">
                <Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundPressed}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushPressed}" />
            </Style>
            <Style Selector="^:pressed /template/ Border#PART_LayoutRoot:pointerover > ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundPressed}" />
            </Style>

            <!--  Disabled state  -->
            <Style Selector="^:disabled /template/ Border#ContentBorder">
                <Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushDisabled}" />
            </Style>
            <Style Selector="^:disabled /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundDisabled}" />
            </Style>

            <!--  Selected state  -->
            <Style Selector="^:selected /template/ Border#ContentBorder">
                <Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundSelected}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushSelected}" />
            </Style>
            <Style Selector="^:selected /template/ Border#PART_LayoutRoot > ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundSelected}" />
            </Style>

            <!--  Selected PointerOver state  -->
            <Style Selector="^:selected /template/ Border#ContentBorder:pointerover">
                <Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundSelectedPointerOver}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushSelectedPointerOver}" />
            </Style>
            <Style Selector="^:selected /template/ Border#PART_LayoutRoot:pointerover > ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundSelectedPointerOver}" />
            </Style>

            <!--  Selected Pressed state  -->
            <Style Selector="^:pressed:selected /template/ Border#ContentBorder:pointerover">
                <Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundSelectedPressed}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushSelectedPressed}" />
            </Style>
            <Style Selector="^:pressed:selected /template/ Border#PART_LayoutRoot:pointerover > ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundSelectedPressed}" />
            </Style>

            <!--  Disabled Selected state  -->
            <Style Selector="^:disabled:selected /template/ Border#ContentBorder">
                <Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundSelectedDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushSelectedDisabled}" />
            </Style>
            <Style Selector="^:disabled:selected /template/ Border#PART_LayoutRoot > ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundSelectedDisabled}" />
            </Style>

            <Style Selector="^:empty /template/ ToggleButton#PART_ExpandCollapseChevron">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^:empty /template/ Panel#PART_ExpandCollapseChevronContainer">
                <Setter Property="Width" Value="{StaticResource TreeViewItemExpandCollapseChevronSize}" />
            </Style>
        </ControlTheme>

        <DataTemplate x:Key="BaseItemTemplate" DataType="viewModels:PieItemBase">
            <ContentControl Content="{Binding}" />
        </DataTemplate>
    </Window.Resources>
    <Window.DataTemplates>
        <DataTemplate DataType="viewModels:ShortcutViewModel">
            <Grid ColumnDefinitions="Auto,*,Auto" RowDefinitions="Auto,Auto">
                <Image
                    Width="24"
                    Height="24"
                    Margin="0 0 8 0"
                    Source="{Binding ImageSource, Converter={controls:BitmapConverter}}"
                    Stretch="Uniform" />
                <TextBlock
                    Grid.Column="1"
                    Margin="8 0 0 0"
                    VerticalAlignment="Center"
                    Text="{Binding Name, Mode=TwoWay}" />
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="viewModels:SeparatorViewModel">
            <Border Background="Transparent" Tag="x">
                <StackPanel
                    Height="24"
                    HorizontalAlignment="Center"
                    Orientation="Horizontal"
                    Spacing="2">
                    <StackPanel.Styles>
                        <Style Selector="Ellipse.dot">
                            <Setter Property="Width" Value="5" />
                            <Setter Property="Height" Value="5" />
                            <Setter Property="Fill" Value="#1fff" />
                        </Style>
                    </StackPanel.Styles>
                    <Ellipse Classes="dot" />
                    <Ellipse Classes="dot" />
                    <Ellipse Classes="dot" />
                </StackPanel>
            </Border>
        </DataTemplate>
        <TreeDataTemplate DataType="viewModels:FolderViewModel" ItemsSource="{Binding Apps}">
            <Grid
                Margin="0"
                Background="Transparent"
                ColumnDefinitions="32,*,auto"
                RowDefinitions="Auto,*">

                <Grid Grid.ColumnSpan="2" ColumnDefinitions="Auto,*,auto">
                    <Image
                        Width="24"
                        Height="24"
                        Margin="0 0 8 0"
                        Source="{Binding ImageSource, Converter={controls:BitmapConverter}}"
                        Stretch="Uniform" />
                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Text="{Binding Name}" />
                </Grid>
                <Grid.ContextFlyout>
                    <MenuFlyout>
                        <MenuItem Command="{Binding AddShortcutCommand}" Header="Add shortcut" />
                        <MenuItem Command="{Binding AddFolderCommand}" Header="Add folder" />
                        <MenuItem Command="{Binding AddSeparatorCommand}" Header="Add separator" />
                    </MenuFlyout>

                </Grid.ContextFlyout>
            </Grid>
        </TreeDataTemplate>
    </Window.DataTemplates>
    <Panel>
        <ExperimentalAcrylicBorder>
            <ExperimentalAcrylicBorder.Material>
                <ExperimentalAcrylicMaterial
                    BackgroundSource="Digger"
                    MaterialOpacity=".95"
                    TintColor="#050f1f"
                    TintOpacity="1" />
            </ExperimentalAcrylicBorder.Material>
        </ExperimentalAcrylicBorder>

        <Grid RowDefinitions="42,*,auto,auto">
            <StackPanel
                Margin="10 0"
                IsHitTestVisible="False"
                Orientation="Horizontal">
                <Image
                    Width="22"
                    Source="/Assets/icon.ico"
                    Stretch="Uniform" />
                <TextBlock
                    Margin="8 0"
                    VerticalAlignment="Center"
                    Text="{Binding $parent[Window].Title}" />
            </StackPanel>

            <Grid Grid.Row="1" ColumnDefinitions="*,2*">
                <Border
                    Margin="10 0 10 10"
                    Padding="10"
                    Background="#2000"
                    BorderBrush="#1fff"
                    BorderThickness="1"
                    CornerRadius="8">

                    <TreeView
                        Margin="10 0"
                        Padding="0 0 10 0"
                        Classes="NodesDragAndDrop"
                        DataContext="{Binding Root}"
                        ItemsSource="{Binding Apps}"
                        KeyDown="OnTreeViewKeyDown"
                        PointerPressed="InputElement_OnPointerPressed"
                        SelectedItem="{Binding #ItemDetails.Content, Mode=TwoWay}"
                        SelectionMode="Single">
                        <TreeView.ContextFlyout>
                            <MenuFlyout>
                                <MenuItem Command="{Binding AddShortcutCommand}" Header="Add shortcut" />
                                <MenuItem Command="{Binding AddFolderCommand}" Header="Add folder" />
                                <MenuItem Command="{Binding AddSeparatorCommand}" Header="Add separator" />
                            </MenuFlyout>
                        </TreeView.ContextFlyout>
                    </TreeView>

                </Border>
                <Border
                    Grid.Column="1"
                    Margin="0 0 10 10"
                    Background="#2000"
                    BorderBrush="#1fff"
                    BorderThickness="1"
                    CornerRadius="8">
                    <ContentControl x:Name="ItemDetails" Content="{Binding SelectedItem, FallbackValue=Select an item}">
                        <ContentControl.DataTemplates>
                            <DataTemplate DataType="viewModels:FolderViewModel">
                                <Border
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Background="#0000"
                                    BorderBrush="#1fff"
                                    BorderThickness="0"
                                    BoxShadow="0 10 10 5 #0000"
                                    CornerRadius="10">
                                    <Grid Margin="4" RowDefinitions="*,auto">
                                        <Image
                                            Width="48"
                                            Height="48"
                                            Margin="56 48"
                                            Source="{Binding ImageSource, Converter={controls:BitmapConverter}}"
                                            Stretch="Uniform" />
                                        <TextBox
                                            Grid.Row="1"
                                            Margin="10 0 10 10"
                                            VerticalContentAlignment="Center"
                                            BorderThickness="0"
                                            CornerRadius="100"
                                            Text="{Binding Name, Mode=TwoWay}"
                                            TextAlignment="Center" />
                                    </Grid>
                                </Border>
                            </DataTemplate>
                            <DataTemplate DataType="viewModels:ShortcutViewModel">
                                <Border
                                    Margin="4"
                                    Padding="12"
                                    Background="#0fff"
                                    CornerRadius="24">
                                    <Grid ColumnDefinitions="Auto,*,Auto" RowDefinitions="Auto,Auto">
                                        <Image
                                            Width="32"
                                            Height="32"
                                            Margin="0 0 8 0"
                                            Source="{Binding ImageSource, Converter={controls:BitmapConverter}}"
                                            Stretch="Uniform" />
                                        <TextBox
                                            Grid.Column="1"
                                            VerticalContentAlignment="Center"
                                            BorderThickness="0"
                                            CornerRadius="100"
                                            FontWeight="DemiBold"
                                            Text="{Binding Name, Mode=TwoWay}" />
                                        <Separator
                                            Grid.ColumnSpan="2"
                                            Margin="0 0 0 -8"
                                            VerticalAlignment="Bottom"
                                            Background="#1fff" />
                                        <StackPanel
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Grid.ColumnSpan="2"
                                            Margin="0 16 0 0">
                                            <StackPanel.Styles>
                                                <Style Selector="Border">
                                                    <Setter Property="Padding" Value="4" />
                                                </Style>
                                                <Style Selector="TextBlock">
                                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                                    <Setter Property="Margin" Value="10 0" />
                                                </Style>
                                                <Style Selector="TextBox">
                                                    <Setter Property="Padding" Value="10 4" />
                                                    <Setter Property="CornerRadius" Value="100" />
                                                    <Setter Property="BorderThickness" Value="0" />
                                                </Style>
                                                <Style Selector="icons|MaterialIcon">
                                                    <Setter Property="Width" Value="22" />
                                                    <Setter Property="Height" Value="22" />
                                                    <Setter Property="Margin" Value="0" />
                                                </Style>
                                                <Style Selector="Button.browse">
                                                    <Setter Property="Padding" Value="0" />
                                                    <Setter Property="CornerRadius" Value="100" />
                                                    <Setter Property="Background" Value="#6000" />
                                                    <Setter Property="Margin" Value="4 0 0 0" />
                                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                                    <Setter Property="Width" Value="{Binding $self.Bounds.Height}" />
                                                    <Setter Property="Content">
                                                        <Template>
                                                            <icons:MaterialIcon Kind="FolderOpen" />
                                                        </Template>
                                                    </Setter>
                                                </Style>
                                            </StackPanel.Styles>
                                            <Border>
                                                <Grid ColumnDefinitions="130,*,auto,auto">
                                                    <TextBlock VerticalAlignment="Center" Text="Path" />
                                                    <TextBox
                                                        Grid.Column="1"
                                                        HorizontalAlignment="Stretch"
                                                        Text="{Binding Uri, Mode=TwoWay}" />
                                                    <Button
                                                        Grid.Column="2"
                                                        Classes="browse"
                                                        Command="{Binding BrowseFolderCommand}" />
                                                    <Button
                                                        Grid.Column="3"
                                                        Classes="browse"
                                                        Command="{Binding BrowseFileCommand}">
                                                        <icons:MaterialIcon Margin="0" Kind="File" />
                                                    </Button>
                                                </Grid>
                                            </Border>

                                            <Border>
                                                <Grid ColumnDefinitions="130,*,auto">
                                                    <TextBlock VerticalAlignment="Center" Text="Icon path" />
                                                    <TextBox
                                                        Grid.Column="1"
                                                        HorizontalAlignment="Stretch"
                                                        Text="{Binding IconPath, Mode=TwoWay}" />
                                                    <Button
                                                        Grid.Column="2"
                                                        Classes="browse"
                                                        Command="{Binding BrowseIconCommand}" />
                                                </Grid>
                                            </Border>
                                            <Border>
                                                <Grid ColumnDefinitions="130,*,auto">
                                                    <TextBlock VerticalAlignment="Center" Text="Working dir" />
                                                    <TextBox
                                                        Grid.Column="1"
                                                        HorizontalAlignment="Stretch"
                                                        Text="{Binding WorkingDir, Mode=TwoWay}" />

                                                    <Button
                                                        Grid.Column="2"
                                                        Classes="browse"
                                                        Command="{Binding BrowseWorkingDirCommand}" />

                                                </Grid>
                                            </Border>

                                            <Border>
                                                <Grid ColumnDefinitions="130,*,auto">
                                                    <TextBlock VerticalAlignment="Center" Text="Args" />
                                                    <TextBox
                                                        Grid.Column="1"
                                                        HorizontalAlignment="Stretch"
                                                        Text="{Binding Args, Mode=TwoWay}" />
                                                </Grid>
                                            </Border>

                                            <Border>
                                                <Grid ColumnDefinitions="130,*,auto">
                                                    <TextBlock VerticalAlignment="Center" Text="Can run as admin" />

                                                    <CheckBox
                                                        Grid.Column="1"
                                                        Margin="0 5"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        IsChecked="{Binding CanRunAsAdmin, Mode=TwoWay}" />
                                                </Grid>
                                            </Border>
                                        </StackPanel>
                                    </Grid>
                                </Border>

                            </DataTemplate>
                        </ContentControl.DataTemplates>
                    </ContentControl>
                </Border>
            </Grid>

            <Border
                Grid.Row="2"
                Margin="10 0 10 10"
                Padding="10"
                Background="#2000"
                BorderBrush="#1fff"
                BorderThickness="1"
                CornerRadius="8">
                <UniformGrid>
                    <CheckBox
                        MinHeight="0"
                        Margin="0 0 0 5"
                        VerticalAlignment="Center"
                        Content="Start with Windows"
                        IsChecked="{Binding StartWithWindows, Mode=TwoWay}" />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="A" />
                            <ColumnDefinition Width="2*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock VerticalAlignment="Center" Text="Hotkey behavior " />
                        <ComboBox
                            Grid.Column="1"
                            Height="{Binding #HotkeySetting.Bounds.Height}"
                            MinHeight="0"
                            Padding="5 0"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            BorderThickness="0"
                            ItemsSource="{controls:EnumValues {x:Type core:TriggerMode}}"
                            SelectedValue="{Binding TriggerMode, Mode=TwoWay}" />
                    </Grid>
                    <CheckBox
                        MinHeight="0"
                        VerticalAlignment="Center"
                        Content="Close after launching"
                        IsChecked="{Binding CloseAfterClick, Mode=TwoWay}" />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="A" />
                            <ColumnDefinition Width="2*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock VerticalAlignment="Center" Text="Display hotkey " />
                        <controls:HotkeySettingControl
                            Name="HotkeySetting"
                            Grid.Column="1"
                            MinHeight="0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Value="{Binding HotKey, Mode=TwoWay}" />
                    </Grid>
                </UniformGrid>
            </Border>

            <Border
                Grid.Row="3"
                MinHeight="20"
                Padding="10"
                Background="#2000"
                BorderBrush="#1fff"
                BorderThickness="0 1 0 0"
                CornerRadius="0 0 8 8">
                <Button
                    MinWidth="200"
                    HorizontalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    Background="{StaticResource SystemAccentColor}"
                    Command="{Binding SaveConfigCommand}"
                    Content="Save and close"
                    CornerRadius="100" />
            </Border>
        </Grid>
    </Panel>
</Window>