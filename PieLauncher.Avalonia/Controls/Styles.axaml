<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:PieLauncher.Avalonia.Controls"
        xmlns:converters="clr-namespace:Avalonia.Controls.Converters;assembly=Avalonia.Controls">
    <Design.PreviewWith>
        <Border Padding="20">
            <StackPanel>
                <TextBlock Text="Button.invisible" />
                <Button Classes="invisible"
                        Content="Invisible Button" />

                <Separator />

                <TextBlock Text="ItemsControl.radial" />
                <ItemsControl Width="50"
                              Height="50"
                              Margin="5"
                              Padding="5"
                              Classes="radial animatable"
                              Classes.visible="{Binding #ItemsControlRadial.IsChecked}">
                    <TextBlock Text="1" />
                    <TextBlock Text="2" />
                    <TextBlock Text="3" />
                    <TextBlock Text="4" />
                </ItemsControl>
                <CheckBox x:Name="ItemsControlRadial"
                          Content="visible"
                          IsChecked="True" />

                <Separator />

                <TextBlock Text="Ellipse.button" />
                <Ellipse Classes="button" />

                <Separator />

                <TextBlock Text="Grid.folder_content" />
                <Grid Classes="folder_content"
                      Classes.visible="{Binding #GridFolderContent.IsChecked}">
                    <TextBlock Text="Folder content" />
                </Grid>
                <CheckBox x:Name="GridFolderContent"
                          Content="visible" />

                <Separator />

                <TextBlock Text="Panel.main_content" />
                <Panel Width="100"
                       Height="100"
                       Classes="main_content"
                       Classes.visible="{Binding #PanelMainContent.IsChecked}">
                    <TextBlock VerticalAlignment="Center"
                               Text="MainContent" />
                </Panel>
                <CheckBox x:Name="PanelMainContent"
                          Content="visible"
                          IsChecked="True" />
                <UniformGrid Rows="1">

                    <Ellipse Width="50"
                             Height="50"
                             Classes="glow" />
                    <Ellipse Width="50"
                             Height="50"
                             Classes="inner_circle" />
                </UniformGrid>

                <Panel>
                    <Ellipse Classes="inner_circle"
                             Fill="SlateGray" />
                    <Ellipse Classes="glow"
                             Stroke="SlateGray" />
                </Panel>

                <UniformGrid Margin="20"
                             Rows="1">
                    <Ellipse Classes="day monday" />
                    <Ellipse Classes="day tuesday" />
                    <Ellipse Classes="day wednesday" />
                    <Ellipse Classes="day thursday" />
                    <Ellipse Classes="day friday" />
                    <Ellipse Classes="day saturday" />
                    <Ellipse Classes="day sunday" />
                </UniformGrid>

                <Button Classes="settings" />

                <TextBlock Margin="20"
                           HorizontalAlignment="Center"
                           Classes="clock">
                    <Run Text="10:08" />
                    <LineBreak />
                    <Run FontSize="24"
                         Foreground="#6fff"
                         Text="20/07/2024" />
                </TextBlock>

                <TreeView>
                    <TreeViewItem Header="Item 1"
                                  IsExpanded="True">
                        <TreeViewItem Header="Subitem 1" />
                        <TreeViewItem Header="Subitem 2" />
                    </TreeViewItem>
                    <TreeViewItem Header="Item 2"
                                  IsExpanded="True" />
                </TreeView>

                <CheckBox Background="Red"
                          Content="test" />
            </StackPanel>
        </Border>
    </Design.PreviewWith>

    <Styles.Resources>
        <x:Double x:Key="TreeViewItemIndent">
            32
        </x:Double>
        <x:Double x:Key="TreeViewItemExpandCollapseChevronSize">
            12
        </x:Double>
        <Thickness x:Key="TreeViewItemExpandCollapseChevronMargin">
            12, 0, 12, 0
        </Thickness>
        <StreamGeometry x:Key="TreeViewItemCollapsedChevronPathData">
            M 1,0 10,10 l -9,10 -1,-1 L 8,10 -0,1 Z
        </StreamGeometry>
        <StreamGeometry x:Key="TreeViewItemExpandedChevronPathData">
            M0,1 L10,10 20,1 19,0 10,8 1,0 Z
        </StreamGeometry>
        <converters:MarginMultiplierConverter x:Key="TreeViewItemLeftMarginConverter"
                                              Indent="{StaticResource TreeViewItemIndent}"
                                              Left="True" />

        <ControlTheme x:Key="FluentTreeViewExpandCollapseChevron"
                      TargetType="ToggleButton">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Width" Value="{StaticResource TreeViewItemExpandCollapseChevronSize}" />
            <Setter Property="Height" Value="{StaticResource TreeViewItemExpandCollapseChevronSize}" />
            <Setter Property="Template">
                <ControlTemplate>
                    <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="Transparent">
                        <Path x:Name="ChevronPath"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="{StaticResource TreeViewItemCollapsedChevronPathData}"
                              Fill="{DynamicResource TreeViewItemForeground}"
                              Stretch="Uniform" />
                    </Border>
                </ControlTemplate>
            </Setter>

            <Style Selector="^:checked /template/ Path#ChevronPath">
                <Setter Property="Data" Value="{StaticResource TreeViewItemExpandedChevronPathData}" />
            </Style>
        </ControlTheme>

		<ControlTheme x:Key="{x:Type TreeViewItem}" TargetType="TreeViewItem">
			<Setter Property="Padding" Value="0" />
			<Setter Property="Background" Value="{DynamicResource TreeViewItemBackground}" />
			<Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrush}" />
			<Setter Property="BorderThickness" Value="{DynamicResource TreeViewItemBorderThemeThickness}" />
			<Setter Property="Foreground" Value="{DynamicResource TreeViewItemForeground}" />
			<Setter Property="MinHeight" Value="{DynamicResource TreeViewItemMinHeight}" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="Template">
				<ControlTemplate>
					<StackPanel>
						<Border Name="PART_LayoutRoot"
								Classes="TreeViewItemLayoutRoot"
								Focusable="True"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding CornerRadius}"
								MinHeight="{TemplateBinding MinHeight}"
								TemplatedControl.IsTemplateFocusTarget="True">
							<Grid Name="PART_Header"
								  ColumnDefinitions="Auto, *"
								  Margin="{TemplateBinding Level, Mode=OneWay, Converter={StaticResource TreeViewItemLeftMarginConverter}}">
								<Panel Name="PART_ExpandCollapseChevronContainer"
									   Margin="{StaticResource TreeViewItemExpandCollapseChevronMargin}">
									<ToggleButton Name="PART_ExpandCollapseChevron"
												  Theme="{StaticResource FluentTreeViewExpandCollapseChevron}"
												  Focusable="False"
												  IsChecked="{TemplateBinding IsExpanded, Mode=TwoWay}" />
								</Panel>
								<ContentPresenter Name="PART_HeaderPresenter"
												  Grid.Column="1"
												  Focusable="False"
												  Background="Transparent"
												  Content="{TemplateBinding Header}"
												  ContentTemplate="{TemplateBinding HeaderTemplate}"
												  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalAlignment}"
												  Margin="{TemplateBinding Padding}" />
							</Grid>
						</Border>
						<ItemsPresenter Name="PART_ItemsPresenter"
										ItemsPanel="{TemplateBinding ItemsPanel}" />
					</StackPanel>
				</ControlTemplate>
			</Setter>

			<!--  PointerOver state  -->
			<Style Selector="^ /template/ Border#PART_LayoutRoot:pointerover">
				<Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundPointerOver}" />
				<Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushPointerOver}" />
			</Style>
			<Style Selector="^ /template/ Border#PART_LayoutRoot:pointerover > ContentPresenter#PART_HeaderPresenter">
				<Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundPointerOver}" />
			</Style>

			<!--  Pressed state  -->
			<Style Selector="^:pressed /template/ Border#PART_LayoutRoot:pointerover">
				<Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundPressed}" />
				<Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushPressed}" />
			</Style>
			<Style Selector="^:pressed /template/ Border#PART_LayoutRoot:pointerover > ContentPresenter#PART_HeaderPresenter">
				<Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundPressed}" />
			</Style>

			<!--  Disabled state  -->
			<Style Selector="^:disabled /template/ Border#PART_LayoutRoot">
				<Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundDisabled}" />
				<Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushDisabled}" />
			</Style>
			<Style Selector="^:disabled /template/ ContentPresenter#PART_HeaderPresenter">
				<Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundDisabled}" />
			</Style>

			<!--  Selected state  -->
			<Style Selector="^:selected /template/ Border#PART_LayoutRoot">
				<Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundSelected}" />
				<Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushSelected}" />
			</Style>
			<Style Selector="^:selected /template/ Border#PART_LayoutRoot > ContentPresenter#PART_HeaderPresenter">
				<Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundSelected}" />
			</Style>

			<!--  Selected PointerOver state  -->
			<Style Selector="^:selected /template/ Border#PART_LayoutRoot:pointerover">
				<Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundSelectedPointerOver}" />
				<Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushSelectedPointerOver}" />
			</Style>
			<Style Selector="^:selected /template/ Border#PART_LayoutRoot:pointerover > ContentPresenter#PART_HeaderPresenter">
				<Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundSelectedPointerOver}" />
			</Style>

			<!--  Selected Pressed state  -->
			<Style Selector="^:pressed:selected /template/ Border#PART_LayoutRoot:pointerover">
				<Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundSelectedPressed}" />
				<Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushSelectedPressed}" />
			</Style>
			<Style Selector="^:pressed:selected /template/ Border#PART_LayoutRoot:pointerover > ContentPresenter#PART_HeaderPresenter">
				<Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundSelectedPressed}" />
			</Style>

			<!--  Disabled Selected state  -->
			<Style Selector="^:disabled:selected /template/ Border#PART_LayoutRoot">
				<Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundSelectedDisabled}" />
				<Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushSelectedDisabled}" />
			</Style>
			<Style Selector="^:disabled:selected /template/ Border#PART_LayoutRoot > ContentPresenter#PART_HeaderPresenter">
				<Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundSelectedDisabled}" />
			</Style>

			<Style Selector="^:empty /template/ ToggleButton#PART_ExpandCollapseChevron">
				<Setter Property="IsVisible" Value="False" />
			</Style>
			<Style Selector="^:empty /template/ Panel#PART_ExpandCollapseChevronContainer">
				<Setter Property="Width" Value="{StaticResource TreeViewItemExpandCollapseChevronSize}" />
			</Style>
		</ControlTheme>
    </Styles.Resources>
    <Style Selector="Button.invisible">
        <Setter Property="Background" Value="Transparent" />
        <Style Selector="^.invisible:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="Transparent" />
        </Style>
    </Style>

    <Style Selector="ToggleButton.invisible">
        <Setter Property="Background" Value="Transparent" />
        <Style Selector="^.invisible:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="Transparent" />
            <Style Selector="^.invisible:checked /template/ ContentPresenter">
                <Setter Property="Background" Value="Transparent" />
            </Style>
        </Style>
        <Style Selector="^.invisible:checked /template/ ContentPresenter">
            <Setter Property="Background" Value="Transparent" />
        </Style>
    </Style>

    <Style Selector="Ellipse.day">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50" />
        <Style Selector="^.monday">
            <Setter Property="Fill">
                <LinearGradientBrush>
                    <GradientStop Offset="0" Color="#5c74e0" />
                    <GradientStop Offset=".75" Color="#1C3190" />
                </LinearGradientBrush>
            </Setter>
        </Style>
        <Style Selector="^.tuesday">
            <Setter Property="Fill">
                <LinearGradientBrush>
                    <GradientStop Offset="0" Color="#fce66a" />
                    <GradientStop Offset="1" Color="#CBAF14" />
                </LinearGradientBrush>
            </Setter>
        </Style>
        <Style Selector="^.wednesday">
            <Setter Property="Fill">
                <LinearGradientBrush>
                    <GradientStop Offset="0" Color="#73ceff" />
                    <GradientStop Offset="1" Color="#2287BD" />
                </LinearGradientBrush>
            </Setter>
        </Style>
        <Style Selector="^.thursday">
            <Setter Property="Fill">
                <LinearGradientBrush>
                    <GradientStop Offset="0" Color="#ffb6c1" />
                    <GradientStop Offset="1" Color="#DA465C" />
                </LinearGradientBrush>
            </Setter>
        </Style>
        <Style Selector="^.friday">
            <Setter Property="Fill">
                <LinearGradientBrush>
                    <GradientStop Offset="0" Color="#ab73eb" />
                    <GradientStop Offset="1" Color="#6214BA" />
                </LinearGradientBrush>
            </Setter>
        </Style>
        <Style Selector="^.saturday">
            <Setter Property="Fill">
                <LinearGradientBrush>
                    <GradientStop Offset="0" Color="#fc4635" />
                    <GradientStop Offset="1" Color="#BA1D0E" />
                </LinearGradientBrush>
            </Setter>
        </Style>
        <Style Selector="^.sunday">
            <Setter Property="Fill">
                <LinearGradientBrush>
                    <GradientStop Offset="0" Color="#FFCB3E" />
                    <GradientStop Offset="1" Color="#FF8800" />
                </LinearGradientBrush>
            </Setter>
        </Style>
    </Style>
    <Style Selector="ItemsControl.radial">
        <Setter Property="ItemsPanel">
            <ItemsPanelTemplate>
                <controls:RadialPanel />
            </ItemsPanelTemplate>
        </Setter>
        <Style Selector="^.animatable">
            <Setter Property="RenderTransform" Value="rotate(15deg)" />
            <Setter Property="Transitions">
                <Transitions>
                    <TransformOperationsTransition Property="RenderTransform"
                                                   Duration="0:0:0.20">
                        <TransformOperationsTransition.Easing>
                            <QuadraticEaseOut />
                        </TransformOperationsTransition.Easing>
                    </TransformOperationsTransition>
                </Transitions>
            </Setter>
            <Style Selector="^.visible">
                <Setter Property="RenderTransform" Value="rotate(0)" />
            </Style>
        </Style>
    </Style>

    <Style Selector="Ellipse.button">
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="80" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="Stroke">
            <SolidColorBrush Color="{DynamicResource BaseGradient3}" />
        </Setter>
        <Setter Property="Fill" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="Effect">
            <DropShadowEffect BlurRadius="30"
                              Opacity=".5" />
        </Setter>
    </Style>

    <Style Selector="Ellipse.inner_circle">
        <Setter Property="Width" Value="300" />
        <Setter Property="Height" Value="300" />
        <Setter Property="StrokeThickness" Value="0" />
        <Setter Property="Effect">
            <DropShadowEffect BlurRadius="30"
                              Opacity=".5" />
        </Setter>
    </Style>

    <Style Selector="Ellipse.glow">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Width" Value="300" />
        <Setter Property="Height" Value="300" />
        <Setter Property="Opacity" Value=".6" />
        <Setter Property="StrokeThickness" Value="8" />
        <Setter Property="Fill" Value="Transparent" />
        <Setter Property="Effect">
            <BlurEffect Radius="30" />
        </Setter>
    </Style>

    <Style Selector="FlyoutPresenter.base">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style Selector="Grid.folder_content">
        <Setter Property="Opacity" Value="0" />
        <Setter Property="Transitions">
            <Transitions>
                <DoubleTransition Property="Opacity"
                                  Duration="0:0:0.125" />
            </Transitions>
        </Setter>
        <Style Selector="^.visible">
            <Setter Property="Opacity" Value="1" />
        </Style>
    </Style>

    <Style Selector="TextBlock.folder_name">
        <Setter Property="MaxWidth" Value="70" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
        <Setter Property="Foreground">
            <SolidColorBrush Color="{DynamicResource BaseTextColor}" />
        </Setter>
    </Style>

    <Style Selector="Panel.shortcut">
        <Setter Property="Transitions">
            <Transitions>
                <TransformOperationsTransition Property="RenderTransform"
                                               Duration="0:0:0.2">
                    <TransformOperationsTransition.Easing>
                        <QuadraticEaseOut />
                    </TransformOperationsTransition.Easing>
                </TransformOperationsTransition>
            </Transitions>
        </Setter>
        <Setter Property="RenderTransform" Value="scale(1)" />
        <Style Selector="^:pointerover">
            <Setter Property="RenderTransform" Value="scale(1.05)" />
        </Style>
    </Style>

    <Style Selector="Panel.main_content">
        <Setter Property="Opacity" Value="0" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="RenderTransform" Value="scale(.90)" />
        <Setter Property="Transitions">
            <Transitions>
                <DoubleTransition Property="Opacity"
                                  Duration="0:0:0.125" />
                <TransformOperationsTransition Property="RenderTransform"
                                               Duration="0:0:0.20">
                    <TransformOperationsTransition.Easing>
                        <QuadraticEaseOut />
                    </TransformOperationsTransition.Easing>
                </TransformOperationsTransition>
            </Transitions>
        </Setter>
        <Style Selector="^.visible">
            <Setter Property="IsHitTestVisible" Value="True" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="RenderTransform" Value="scale(1)" />
        </Style>
    </Style>

    <Style Selector="controls|Donut.main_donut">
        <Setter Property="InnerRadius" Value="360" />
        <Setter Property="OuterRadius" Value="580" />
        <Setter Property="Stroke">
            <SolidColorBrush Color="{DynamicResource BaseGradient3}" />
        </Setter>
        <Setter Property="Fill">
            <RadialGradientBrush>
                <GradientStop Offset="0.5" Color="{DynamicResource BaseGradient1}" />
                <GradientStop Offset="1.0" Color="{DynamicResource BaseGradient2}" />
            </RadialGradientBrush>
        </Setter>
    </Style>

    <Style Selector="Window.main">
        <Setter Property="WindowStartupLocation" Value="CenterScreen" />
        <Setter Property="SystemDecorations" Value="None" />
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Width" Value="700" />
        <Setter Property="Height" Value="700" />
        <Setter Property="Title" Value="PieLauncher" />
    </Style>

    <Style Selector="Button.settings">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CornerRadius" Value="100" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Content">
            <Template>
                <Path Width="14"
                      Height="14"
                      Data="{DynamicResource SvgSettingsRounded}"
                      Fill="White"
                      Stretch="Uniform" />
            </Template>
        </Setter>
    </Style>

    <Style Selector="TextBlock.clock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="FontSize" Value="42" />
        <Setter Property="FontWeight" Value="Thin" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="{DynamicResource K2D}" />
    </Style>

    <Style Selector="TextBox">
        <Setter Property="BorderBrush" Value="#1fff" />
    </Style>

    <Style Selector="ComboBox">
        <Setter Property="BorderBrush" Value="#1fff" />
    </Style>
    <Style Selector="CheckBox">
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Template">
            <ControlTemplate>
                <Grid x:Name="RootGrid"
                      ColumnDefinitions="20,*">
                    <Border x:Name="PART_Border"
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}" />

                    <Grid VerticalAlignment="Center">
                        <Border x:Name="NormalRectangle"
                                Width="20"
                                Height="20"
                                Background="{DynamicResource CheckBoxCheckBackgroundFillUnchecked}"
                                BorderBrush="{DynamicResource CheckBoxCheckBackgroundStrokeUnchecked}"
                                BorderThickness="{DynamicResource CheckBoxBorderThemeThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                UseLayoutRounding="False" />

                        <Viewbox UseLayoutRounding="False">
                            <Panel>
                                <Panel Width="16"
                                       Height="16" />
                                <Path x:Name="CheckGlyph"
                                      VerticalAlignment="Center"
                                      Fill="{DynamicResource CheckBoxCheckGlyphForegroundUnchecked}"
                                      FlowDirection="LeftToRight"
                                      Opacity="0"
                                      Stretch="Uniform" />
                            </Panel>
                        </Viewbox>
                    </Grid>
                    <ContentPresenter x:Name="PART_ContentPresenter"
                                      Grid.Column="1"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      RecognizesAccessKey="True"
                                      TextWrapping="Wrap" />
                </Grid>
            </ControlTemplate>
        </Setter>	
    </Style>

</Styles>
